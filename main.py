nums1=[] #Объявляем пустой список 1
m=int(input('Введите количество элементов списка 1 '))
for i in range(m): #Цикл для заполнения списка 1 дробными числами
    nums1_element=float(input(f'Введите элемент № {i+1} списка 1 '))
    nums1.append(nums1_element)
print('Список1- ',nums1) #Распечатаем список для облегчения проверки правильности кода

nums2=[] # Объявляем пустой список 2
n=int(input('Введите количество элементов списка 2 '))
for i in range(n): #Цикл для заполнения списка 2 дробными числами
    nums2_element=float(input(f'Введите элемент № {i+1} списка 2 '))
    nums2.append(nums2_element)
print('Список2- ',nums2) #Распечатаем список для облегчения проверки правильности кода

def medians(nums1,nums2): #Объявляем функцию
    nums= nums1+nums2 #Объединяем 2 заполненных списка
    nums.sort() #Сортируем объединенный список
    lenght_of_nums= len(nums) #Задаем переменную, содержащую длину объединенного списка
    if lenght_of_nums %2==0: #Задаем алгоритм для случая, когда длина объединного списка- четное число
        median_of_nums= (nums[int(lenght_of_nums/2)]+nums[int(lenght_of_nums/2-1)])/2 #Находим медиану, складывая элемент, индекс которого находим делением длины списка на 2 (не забываем о существовании нулевого индекса, т.е. если в списке 4 элемента [1,2,3,4], то делением длины на 2 получим индекс 2, а под индексом 2 стоит число 3) с элементом стоящим перед ним и деля сумму этих элементов на 2
        median_of_nums=format(median_of_nums, '.5f') #Задаем количество знаков после запятой
    else: #Задаем алгоритм для случая, когда длина объединного списка- нечетное число
        median_of_nums= (nums[int((lenght_of_nums+1)/2)-1]) #Находим медиану (находим элемент с индексом равным уменьшенному на 1 частному от деления длины списка, увеличенной на 1 (список- [1,3,6,7,9]: 5 элементов, 5+1=6, 6:2=3, 3-1=2 а под индексом 2 (не забываем нулевой) стоит число 6-медиана)
        median_of_nums=format(median_of_nums, '.5f') #Задаем количество знаков после запятой
    print('Объединённый список- ', nums) #Для наглядности печатаем объединенный осортированный список
    return median_of_nums #Функция будет возвращать найденную медиану
print('Медиана= ',medians(nums1,nums2)) #Объявляем функцию